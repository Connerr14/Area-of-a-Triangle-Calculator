/*
Created by Conner Recoskie
Date: Monday March 6th, 2023
This program takes the three lengths of a triangle from a user. It then 
calculates and returns the area of the triangle using those inputted lengths. 
If any invalid triangles or data types are inputted, the program will output an
error message to the GUI telling the user. 
*/
public class FrmTriangleArea extends javax.swing.JFrame {
    
    /*
    Function: isValid
    Purpose: This method confirms that no one triangle side is longer then the 
    sum of the other two sides. It confirms that the triagle is valid. 
    Parameters: double side1 repersents one side of the triangle.
                double side2 repersents an addional side of the triangle.
                double side3 repersents the third side of the triangle.
    Returns: boolean
    */
    public static boolean isValid( double side1, double side2, double side3)
    {
        // Declaring local double variables to hold the sum of side lengths
        double sum1;
        double sum2;
        double sum3;
        
        sum1 = side1 + side2;
        sum2 = side1 + side3;
        sum3 = side2 + side3;

        return (sum1 > side3) && (sum2 > side2) && (sum3 > side1);
    }
    
    /*
    Function area
    Purpose: This method calculates the area of a triangle with the three side
    lengths of it.
    Parameters: double side1 repersents one side of the triangle.
                double side2 repersents an addional side of the triangle.
                double side3 repersents the third side of the triangle.
    Returns: double
    */
    public static double area( double side1, double side2, double side3)
    {
        // Declaring local double variable to hold the area of the triangle
        double s;
        
        // Declaring local double variable to hold the formula value "s"
        double areaOfTriangle;
        
        s = (side1 + side2 + side3) / 2;
        
        areaOfTriangle = Math.sqrt(s * (s - side1) * (s - side2) * (s - side3));
        
        return areaOfTriangle;
    }
   
    public FrmTriangleArea() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblInstructions = new javax.swing.JLabel();
        lblInstructions2 = new javax.swing.JLabel();
        lblSide1 = new javax.swing.JLabel();
        txtSide1 = new javax.swing.JTextField();
        lblSide2 = new javax.swing.JLabel();
        txtSide2 = new javax.swing.JTextField();
        lblSide3 = new javax.swing.JLabel();
        txtSide3 = new javax.swing.JTextField();
        btnGetTriangleArea = new javax.swing.JButton();
        lblArea = new javax.swing.JLabel();
        lblAreaOfTriangle = new javax.swing.JLabel();
        lblErrorMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        lblTitle.setText("Area Of A Triangle Calculator");

        lblInstructions.setText("Please enter each side length into the appropriate");

        lblInstructions2.setText("box and then click \"Calculate Area\".");

        lblSide1.setText("Side 1:");

        lblSide2.setText("Side 2:");

        lblSide3.setText("Side 3:");

        btnGetTriangleArea.setText("Calculate Area");
        btnGetTriangleArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetTriangleAreaActionPerformed(evt);
            }
        });

        lblArea.setText("The area of the triangle is:");

        lblErrorMessage.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTitle)
                .addGap(49, 49, 49))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblSide3)
                                .addGap(18, 18, 18)
                                .addComponent(txtSide3, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblSide2)
                                .addGap(18, 18, 18)
                                .addComponent(txtSide2, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblSide1)
                                .addGap(18, 18, 18)
                                .addComponent(txtSide1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGetTriangleArea)
                        .addGap(34, 34, 34))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblInstructions)
                            .addComponent(lblInstructions2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblArea)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblAreaOfTriangle, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblInstructions)
                .addGap(4, 4, 4)
                .addComponent(lblInstructions2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSide1)
                    .addComponent(txtSide1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSide2)
                    .addComponent(txtSide2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGetTriangleArea))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSide3)
                    .addComponent(txtSide3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblErrorMessage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblArea)
                    .addComponent(lblAreaOfTriangle, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGetTriangleAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetTriangleAreaActionPerformed

        // Initializing double variables for the three sides of the triangle
        double sideOne = 0;
        double sideTwo = 0;
        double sideThree = 0;
        
        // Initializing boolean variables for error checking
        boolean validity = false;
        boolean errorCheck;
        
        // Initializing double variable for the area of the triangle
        double areaOfTriangle;
        
        // Attempting to parse the text inputs for side lengths as doubles
        try 
        {
            sideOne = Double.parseDouble(txtSide1.getText());
            sideTwo = Double.parseDouble(txtSide2.getText());
            sideThree = Double.parseDouble(txtSide3.getText());
            
            //If parsing was successful, set error check to true
            errorCheck = true;
        }
        // If any of the inputs couldn't be parsed as doubles, catch it
        catch (NumberFormatException e)
        {
            // Set error check to false
            errorCheck = false;
            
            // Set error message to "Invalid input"
            lblErrorMessage.setText("Invalid input");
            
            // Set area label to "N/A"
            lblAreaOfTriangle.setText("N/A");
        }
        
        // If the error check is true, check the validity of the triangle with the three sides
        if (errorCheck)
        {
            validity = isValid(sideOne, sideTwo, sideThree);
        }

         // If the triangle is valid, calculate the area of the triangle 
        if (validity)
        {
            // Calculate the area of the triangle, storing the result in a variable
            areaOfTriangle = area(sideOne, sideTwo, sideThree);
            
            // Rounding the area to two decimal places;
            areaOfTriangle = areaOfTriangle * 100;
            areaOfTriangle = Math.round(areaOfTriangle);
            areaOfTriangle = areaOfTriangle/100;
            
            // Set the area label the area of the triangle
            lblAreaOfTriangle.setText(String.valueOf(areaOfTriangle));
            
            // Set the error message to an empty string
            lblErrorMessage.setText("");
        }
        // If the triangle is invalid, set the error message to "Invalid side lengths"
        else
        {
            // If invalid data type was entered, dont update label
            if (lblErrorMessage.getText().equals("Invalid input")) 
            { 
                lblErrorMessage.setText("Invalid input");
                lblAreaOfTriangle.setText("N/A");
            }
            // If correct data types were inputted, but incorrect side lengths were entered
            else
            {
                // Update label to tell user what the error is
                lblErrorMessage.setText("Invalid side lengths");
                lblAreaOfTriangle.setText("N/A");
            }
        }     
    }//GEN-LAST:event_btnGetTriangleAreaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmTriangleArea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmTriangleArea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmTriangleArea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmTriangleArea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmTriangleArea().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGetTriangleArea;
    private javax.swing.JLabel lblArea;
    private javax.swing.JLabel lblAreaOfTriangle;
    private javax.swing.JLabel lblErrorMessage;
    private javax.swing.JLabel lblInstructions;
    private javax.swing.JLabel lblInstructions2;
    private javax.swing.JLabel lblSide1;
    private javax.swing.JLabel lblSide2;
    private javax.swing.JLabel lblSide3;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtSide1;
    private javax.swing.JTextField txtSide2;
    private javax.swing.JTextField txtSide3;
    // End of variables declaration//GEN-END:variables
}
